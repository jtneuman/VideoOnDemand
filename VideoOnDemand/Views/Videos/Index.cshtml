@model IEnumerable<VideoOnDemand.Entities.Video>

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>

<p>
    <button-container class="button-col-width" controller="@ViewContext.RouteData.Values["controller"].ToString()" actions="Create" descriptions="Create New"></button-container>
</p>
<table class="table table-striped table-condensed">
    <thead>
        <tr class="success">
                <th>
                    @Html.DisplayNameFor(model => model.Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Thumbnail)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Url)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Duration)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Position)
                </th>
                @*<th>
                    @Html.DisplayNameFor(model => model.CourseId)
                </th>*@
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Thumbnail)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Url)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Duration)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Position)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.CourseId)
            </td>*@
            <td>
                <button-container class="button-col-width" controller="@ViewContext.RouteData.Values["controller"].ToString()" actions="Edit,Details,Delete" use-glyphs="true" id="@item.Id"></button-container>
            </td>
        </tr>
}
    </tbody>
</table>
